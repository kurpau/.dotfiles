cd .dotfiles/zsh
cd .config
mkdir zsh
ls -a
mv .zshrc zsh
mv completion.zsh zsh
clear
ls
cd  zsh
ls -a
clear
cd ..
cd ..
cd ..
clear
cd ..
ls -a
rm .zshenv
cd .config
ls
ls -a
rm .zshrc
rm completion.zsh
clear
cd ..
cd .dotfiles/zsh
cd ..
stow zsh
exec zsh
nvim zsh
exec zsh
cd ..
stow zsh
exec zsh
stow zsh
exec zsh
exec zsh
echo $DOTFILES
echo $hello
echo no
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
clear
exit
echo $XDG_CONFIG_HOME
exec zsh
clear
exec zsh
clear
git status
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
clear
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
clear
clear
exec zsh
exec zsh
exec zsh
exec zsh
clear
clear
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
git status
git add .
clear
exec zsh
ls
ls -a
ls -a
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
clear
clear
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
clear
clear
clear
clear
clear
clear
exec zsh
exec zsh
exec zsh
clear
clear
exec zsh
clear
clear
exec zsh
exec zsh
clear
clear
exec zsh
exec zsh
exec zsh
exec zsh
clear
exec zsh
exec zsh
exec zsh
clear
exec zsh
echo -n
echo -n lol
clear
man echo
man echo
exit
cd .config/zsh
clear
ls
ls -a
mkdir plugs
mv completion.zsh plugs
nvim .
mv plugs plugins
ls
ls -a
nvim .
clear
exec zsh
clear
exec zsh
exec zsh
nvim .
git status --porcelain
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
git status
git status
exec zsh
git status --porcelain -b
git status --porcelain -b
git status --porcelain
git status --porcelain -b 2> /dev/null
command
command git status --porcelain -b 2> /dev/null
INDEX=$(command git status --porcelain -b 2> /dev/null)
echo "$INDEX" | command grep -E '^\?\? ' &> /dev/null
echo "$INDEX" | grep '^ M ' &> /dev/null
echo "$INDEX" | grep '^ M \

echo "$INDEX" | grep '^ M '
echo "$INDEX" | command grep -E '^\?\? '
git branch -v | grep -E 'ahead|behind' | sed -r 's/[ *]\s(\S*).*(\[(ahead|behind).+?\]).*/\1 \2/g'
git rev-list {local}..{remote} --count
remote=${$(git rev-parse --verify ${hook_com[branch]}@{upstream} \\
        --symbolic-full-name 2>/dev/null)/refs\/remotes\/}
$remote
ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null | wc -l)\
        (( $ahead )) && gitstatus+=( "${c3}+${ahead}${c2}" )
$ahead
behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null | wc -l)\
        (( $behind )) && gitstatus+=( "${c4}-${behind}${c2}" )
$behind
git remote -v
git rev-list --left-right --count main...origin/main\

git rev-list --left-right --count main origin/main\

git status -sb
exec zsh
clear
clear
exec zsh
git status -sb
git add .
git commit -m "Update config"
clear
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
git restore .
git add .
git status
git restore .
clear
git status
git restore --staged .
exec zsh
git add .
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
exec zsh
git add .
git commit -m "Update prompt config"
git push
clear
nvim .config/zsh/.zshrc
cd ..
cd ..
cd ./.dotfiles
exec zsh
exec zsh
cd ..
cd .dotfiles/clear
clear
cd .dotfiles
exec zsh
exec zsh
exec zsh
exit
exit
ls -a
ls -a ~
ls -a ~
ls -a ~
ls -a ~
ls -a ~
ls -a ~
ls -a ~
ls -a ~
ls -a ~
cd ..
dirs -v
cd tmux/.config/tmux/
nvim tmux.conf
tmux source tmux.conf
nvim .
tmux source tmux.conf
tmux source tmux.conf
tmux source tmux.conf
clear
exit
clear
git status
rm .config/zsh/.zsh_history
git restore .
cd ..
clear
clear
ssh localhost
cd ..
clear
cd Desktop/learningVue
clear
git status
clear
git pull
exit
brew install --cask amethyst
t
exit
tmux
git add notes
git status
git add ../../notes.md
git status
clear
git status
exit
git add .
git commit -m "Change config formatter"
git push
clear
git add .
git commit -m "Change tab config"
clear
git push
git status
clear
exit
tmux attack
tmux attach
exit
clear
cd Desktop/learningVue
cd courseProjects/cmp-adv-01-starting-setup
git add .
git status
clear
git commit -m "Slots"
clear
clear
cd .dotfiles/nvim/.config/nvim
nvim .
nvim .
nvim .
nvim .
vim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
cd ~/.dotfiles/
git add .
git status
git add .
git commit -m "Update nvim config"
clear
git push
nvim
nvim
exity
exit
exit
nvim
nvim
nvim
nvim empty.lua
nvim empty.lua
ls
rm empty.lua
nvim empty.lua
nvim empty.lua
nvim empty.lua
nvim empty.lua
nvim empty.lua
nvim empty.lua
rm empty.lua
ls -a
clear
exit
tmux neww tmux-sessionizer
eixt
exit
exit
exit
git status
git add .
git status
exit
chmod +x tmux-sessionizer
exit
nvim .
nvim .
tmux ls
cd ../../..//
mkdir -p bin/.local/scripts
cd bin/.local/scripts
clear
nvim 
dris -v
dirs -v
1
git status
git restore --staged .
git status
git add bin/.local/scripts/.
git status
git commit -m "Add new script"
clear
git add .
git commit -m "Update nvim config"
clear
git push
nvim .
cd ..
1
git stow bin
stow bin
clear
nvim .
cd ..
exec zsh
nvim .
cp .dotfiles/bin ~/
cp .dotfiles/bin/ ~/bin
clear
ls -a
nvim .local
nvim .local
cd .dotfiles/bin/.local/scripts
ls
mv tmux-sessionizer tmux-sessionizer.sh
clear
ls
git status
clear
nvim tmux-sessionizer.sh
git add tmux-sessionizer.sh
git commit -m "Add script"
git push
clear
dirs -v
1
cd .dotfiles
stow bin
cd ..
nvim .local
cd .local
ls
ls scripts
cd scripts
./tmux-sessionizer.sh
clear
clear
cd ~
cd .local/scripts
ls
cd ~
cd .dotfiles
nvim .
git add .
git commit -m "Update env vars"
git push
clear
stow zsh
stow bin
exec zsh
fzf
clear
ls /
ls /Users/admin
ls /Applications
tmux neww tmux-sessionizer
tmux neww tmux-sessionizer
tmuz
tmux
man man
man tmux
tmux
find
find work_redlaw
find work_redlaw | grep kornelija
man find
clear
$(brew --prefix)/opt/fzf/install\

brew install fzf
$(brew --prefix)/opt/fzf/install\

nvim .dotfiles/zsh
clear
ls | fzf
exec zsh
clear
echo $PATH
$PATH
nvim .zshenv
exec zsh
echo $PATH
clear
exit
echo $PATH
tmux-sessionizer.sh
ls -la
cd .dotfiles/bin/.local
nvim .
tmux-sessionizer.sh
nvim .
tmux-sessionizer.sh
nvim .
tmux-sessionizer.sh
nvim .
clear
tmux-sessionizer.sh
exec zsh
tmux-sessionizer.sh
exit
tmux-sessionizer.sh
cd .dotfiles
stow zsh
clear
exec zsh
cd ..
./tmux-sessionizer.sh
echo $PATH
nvim .
tmux neww tmux-sessionizer
tmux neww tmux-sessionizer.sh
exec zsh
tmux-sessionizer.sh
export FZF_DEFAULT_COMMAND='find . -type d \( -path "*/.git" -o -path "*/node_modules" \) -prune -o -print | sed 1d'\

tmux-sessionizer.sh
nvim .
echo $FZF_DEFAULT_COMMAND\

fzf
cd ../Desktop/learningVue
fzf
find . | fzf
nvim .
dirs -v
1
nvim .
tmux-sessionizer.sh
clear
nvim .
tmux
nvim .
clear
exit
cd .dotfiles
clear
cd nvim/.config/nvim/
clear
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
nvim .
exit
exit
cd /Users/admin/Desktop/learningVue/courseProjects/cmp-adv-01-starting-setup
clear
npm run serve
clear
cd ..
clear
cd prj-cmp-01-starting-setup
git status
clear
cat ../cmp-adv-01-starting-setup/package.json
nvim package.json
clear
npm run serve
git status
git add ./
git commmit -m "Add project"
git commit -m "Add project"
clear
git push
git log
clear
exit
clear
git status
git add .
git status
git commit -m "Finish project"
clear
git push
clear
git add ../../notes.md
git commit -m "Update notes"
git push
clear
exit
clear
cd Desktop/learningVue/courseProjects/cmp-adv-01-starting-setup
clear
pwd
nvim .
nvim .
nvim .
cd ..
cd prj-cmp-01-starting-setup
clear
clear
clear
npm i
clear
clear
nvim .
nvim .
git status
npm i
clear
exit
tmux attach
clear
tmux ls
tmux
clear
exit
nvim .
nvim .
clear
tmux-sessionizer
nvim .
tmux neww tmux-sessionizer.sh
nvim .
nvim .
brew install --cask rectangle
tmux
cd /Users/admin/Desktop/learningVue/courseProjects/prj-cmp-01-starting-setup\

clear
npm run serve
cd Desktop/learningVue/courseProjects/prj-cmp-01-starting-setup
pwd
pwd
nvim .
nvim .
cd work_redlaw
ls
cd kornelija
ls
mkdir gmail
mkdir gmail/korneja.eu
cd gmail
ls
cd korneja.eu
clear
cd ..
mv korneja.eu korneja-eu
cd korneja-eu
clear
mv ~/Desktop/korneja.mbox .
mv ~/Desktop/Gmail-Takeout-korneja .
ls
cd ..
ls
clear
exit
cd work_redlaw/kornelija/gmail/korneja-eu
finder
open .
clear
exit
cd ../
cd ..
clear
ssh maironis
nvim .ssh/config
ssh maironis
nvim .ssh/config
ssh maironis
ssh maironis
exit
exit
nvim ~/.ssh/config
nvim .
git branch proxy
git branch
git checkout proxy
clear
nvim .
git pull -a
git pull origin proxy
clear
ls
nvim .
git status
git add .
git commit -m "Update proxy info"
git push
git push --set-upstream origin proxy
clear
nvim .
git add .gitignore
git commit -m "Update gitignore"
git status
rm cookiesBannerError.png
git status
clear
git status
git add src/utils.js
git commit -m "Add random range util"
git add .
git commit -m "Improve and export logs to bot level"
clear
git push
exit
node rotate_proxy.js
node rotate_proxy.js
node rotate_proxy.js
clear
git log
node src/main.js -5 -c 2
npm i
node src/main.js -5 -c 2
node src/main.js -n 5 -c 2
node src/main.js
clear
node src/main.js
node src/main.js
node src/main.js
clear
node src/main.js
node src/main.js
node src/main.js
node src/main.js
node src/main.js
node src/main.js
clera
clear
node src/main.js
node src/main.js
clear
node src/main.js -c 3
clear
node src/main.js -c 3
node src/main.js -c 10
node src/main.js -c 10
clear
git status
exit
cd Desktop/streamingBot
git pull
git status
git pull --rebase
clear
git status
git loog
git log
git revert fbe35c0adde67c0b4605b5a54b5e2b7ea598d2b1
git log
ls
git status
cd ..
rm -rf streamingBot
cd ..
mkdir repos
mv Desktop/learningVue ~/repos
clear
cd repos
git clone https://github.com/kurpau/streamingBot.git
cd streamingBot
clear
tmux
clear
cd ~
clear
ssh maironis
exit
clear
cd Desktop/learningVue/courseProjects/prj-cmp-01-starting-setup
clear
nvim .
git add .
git commit -m "Finish project"
clear
clear
exit
npm run serve
cd ..
git push
exit
tmux attach
tmux
exit
ssh maironis
exit
cd repos/streamingBot
tmux
tmux ls
tmux
clear
cd repos/learningVue
clear
clear
nvim .
nvim .
node src/main.js
nvim .
node src/main.js
clear
nvim .
node rotate_proxy.js
node src/main.js -n 3 -c 2
node src/main.js -n 3 -c 2
node src/main.js
node src/main.js
node src/main.js
git status
git add .
git commit -m "Refactor botManager class"
clear
git push
git pull
git reset HEAD~ 
clear
git pull
clear
git log
clear
git add .
git commit -m "Refactor botManager class"
clear
git push
clear
npm install winston\

node src/main.js
node src/main.js
npm i
node src/main.js
node src/main.js
node src/main.js
node src/main.js
clear
ls src
cat src/logger.js
clear
node src/main.js
nvim .
node src/main.js
clear
node src/main.js --loglevel debug
node src/main.js --loglevel debug
clear
node src/main.js --loglevel debug
node src/main.js --loglevel debug
node src/main.js --loglevel debug
clear
git status
git add .
git commit -m "Add loggin module winston"
clear
 git push
clear
node src/main.js -c 30
node src/main.js -c 30
clear
git add .
git commit -m "Add stream cycle reset after error"
clear
git push
cd repos/learningVue
open .
clear
npm serve
npm run serve
npm run serve
clear
nvim .
git add .
git commit -m "Add project"
clear
exit
ssh maironis
exit
tmux ls
tmux list
tmux 
exit
cd work_redlaw
ls
cd redlaw_design
ls
open .
cd repos/learningVue
clear
git status
cd courseProjects/forms-01-starting-setup
clear
npm i
clear
ls
npm run serve
clear
nvim .
nvim .
cd ../http-01-starting-setup
clear
git add .
git commit -m "Add project"
clear
git push
clear
/Applications/Python\ 3.11/Install\ Certificates.command ; exit;
